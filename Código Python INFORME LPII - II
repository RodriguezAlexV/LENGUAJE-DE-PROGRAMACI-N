import streamlit as st
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt


st.title('Resultados de la Regresión Logística')

data = {
    'feature1': np.random.rand(100),
    'feature2': np.random.rand(100),
    'feature3': np.random.rand(100),
    'target': np.random.randint(0, 2, 100)
}
df = pd.DataFrame(data)

X = df[['feature1', 'feature2', 'feature3']]
y = df['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
y_pred_prob = model.predict_proba(X_test)[:, 1]

accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
roc_auc = roc_auc_score(y_test, y_pred_prob)
conf_matrix = confusion_matrix(y_test, y_pred)

intercepto = model.intercept_[0]

coeficientes = model.coef_[0]

st.subheader('Métricas:')
st.write('Precisión (Accuracy):', accuracy)
st.write('Precisión (Precision):', precision)
st.write('Sensibilidad (Recall):', recall)
st.write('Puntuación F1 (F1 Score):', f1)
st.write('ROC AUC Score:', roc_auc)

st.subheader('Resultados del modelo:')
st.write('Intercepto:', intercepto)
st.write('Coeficientes (Pesos de las variables):')
for i, coef in enumerate(coeficientes):
    st.write(f'    feature{i+1}: {coef}')

st.subheader('Matriz de Confusión:')
st.write(conf_matrix)

fig, ax = plt.subplots()
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', ax=ax)
ax.set_xlabel('Predicción')
ax.set_ylabel('Real')
ax.set_title('Matriz de Confusión')
st.pyplot(fig)
